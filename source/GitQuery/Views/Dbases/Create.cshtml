@model GitQuery.Models.Dbase

<script src="@Url.Content("~/Scripts/Commits.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add a Database</h2>
<div>
    @Html.ActionLink("Back", "Index")
</div>

<div class="col-md-3">
    <h4>1: Choose a database</h4>

    <input id="Oracle" type="image" onclick='selectDB(0)' src="~/Images/Oracle.jpg">
    <input id="MySQL" type="image" onclick='selectDB(1)' src="~/Images/MySQL.png"><p></p>
    <input id="MS SQL Server"  type="image" onclick='selectDB(2)' src="~/Images/MS.png"><p></p>
    <input id="PostgreSQL" type="image" onclick='selectDB(3)' src="~/Images/PSQL.gif"><p></p>
</div>

<div class="col-md-1"></div>

    @if (ViewBag.Step == 1 || ViewBag.Step == 2)
    {
        <div class="col-md-3">
            <h4>2: Connect</h4>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <div class="col-md-offset-1">
                        <div class="text-danger">@ViewBag.Error</div>
                    </div>

                    @Html.HiddenFor(model => model.dbType, new { @value = ViewBag.dbType, @class = "form-control" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.server, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="col-md-offset-2">
                                @if (ViewBag.Step == 1){ <small>*name or 'IP Address,Port'</small> }
                                @Html.EditorFor(model => model.server, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.server, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="col-md-offset-2">
                                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div id="hidden"></div>

                    @if (ViewBag.Step == 1)
                    {
                        <div class="form-group">
                            <div class="text-right">
                                <input type="button" value="Back" onclick="location.href='@Url.Action("Index", "Dbases")'" class="btn btn-default" />
                                <input type="submit" value="Connect" formaction='@Url.Action("Create")' class="btn btn-default" />
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    }
<div class="col-md-1"></div>
    @if (ViewBag.Step == 2)
    {
        <div class="col-md-3">
            <h4>3: Log In</h4>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="col-md-offset-2">
                                @Html.Editor("username", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="col-md-offset-2">
                                @Html.Editor("pass", new { htmlAttributes = new { @type = "password", @class = "form-control" } })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="text-right">
                            <input type="button" value="Back" onclick="location.href='@Url.Action("Create", "Dbases")'" class="btn btn-default" />
                            <input type="submit" value="Log In" formaction='@Url.Action("Create2")' class="btn btn-default" />
                        </div>                
                    </div>

                </div>
            }
        </div>
    }



    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }